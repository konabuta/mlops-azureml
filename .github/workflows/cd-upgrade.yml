name: outer-loop continuous deployment for model upgrade
on:
  workflow_dispatch:
  workflow_run:
      workflows: ["monitoring model and system"]
  # pull_request:
  #   branches:
  #     - main
  #   paths:
  #     - outer-loop/*


jobs:
  model-deploy-stage-upgrade:
    name: "Deploy Model into STAGE for upgrade"
    runs-on: "ubuntu-18.04"
    steps:
    - name: check out repo
      uses: actions/checkout@v2
    - name: echo
      run: az --version
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZ_CREDS}}
    - name: setup
      run: bash setup.sh ${{secrets.RESOURCE}} ${{secrets.WORKSPACE}} ${{secrets.LOCATION}}
      working-directory: admin/cli
    - name: Create Deployment into Stage - GREEN
      run: |
        deployment_flag=$(az ml online-deployment list --endpoint-name lgb-endpoint-stage --query "[].name | contains(@,'green')")
        if [ $deployment_flag == "true" ]; then
          az ml online-deployment delete --endpoint-name lgb-endpoint-stage --name green --yes
        else
          echo "Deployment green doesn't exist."
        fi     
        az ml online-deployment create --endpoint lgb-endpoint-stage -f ./model_deployment_into_existing_endpoints/green-deployment.yml

      working-directory: outer-loop
    - name: Traffic increase into GREEN
      run: az ml online-endpoint update -n lgb-endpoint-stage --traffic "blue=80 green=20"
    - name: Endpoint Testing
      run: az ml online-endpoint invoke --name lgb-endpoint-stage --request-file ./endpoints_testing/sample_request.json
      working-directory: outer-loop

## TODO: Human approval flow using Environment in GitHub

  model-deploy-prod:
    name: "Deploy Model into PROD for upgrade"
    needs: [model-deploy-stage-upgrade]
    runs-on: "ubuntu-18.04"
    steps:
    - name: check out repo
      uses: actions/checkout@v2
    - name: echo
      run: az --version
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZ_CREDS}}
    - name: setup
      run: bash setup.sh ${{secrets.RESOURCE}} ${{secrets.WORKSPACE}} ${{secrets.LOCATION}}
      working-directory: admin/cli
    - name: Create Deployment into Prod - GREEN
      run: |
        deployment_flag=$(az ml online-deployment list --endpoint-name lgb-endpoint-prod --query "[].name | contains(@,'green')")
        if [ $deployment_flag == "true" ]; then
          az ml online-deployment delete --endpoint-name lgb-endpoint-prod--name green --yes
        else
          echo "Deployment green doesn't exist."
        fi     
        az ml online-deployment create --endpoint lgb-endpoint-prod -f ./model_deployment_into_existing_endpoints/green-deployment.yml

      working-directory: outer-loop
    - name: Traffic increase into GREEN
      run: az ml online-endpoint update -n lgb-endpoint-prod --traffic "blue=80 green=20"
    - name: Endpoint Testing
      run: az ml online-endpoint invoke --name lgb-endpoint-prod --request-file ./endpoints_testing/sample_request.json
      working-directory: outer-loop